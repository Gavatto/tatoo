<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Драйвер сеансу за замовчуванням
    |------------------------------------------------ ------------------------
    |
    | Цей параметр керує «драйвером» сеансу за замовчуванням, який використовуватиметься на
    | запити. За замовчуванням ми будемо використовувати полегшений рідний драйвер, але
    | ви можете вказати будь-які інші чудові драйвери, надані тут.
    |
    | Supported: "file", "cookie", "database", "apc",
    |            "memcached", "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'file'),

    /*
    |--------------------------------------------------------------------------
    | Тривалість сеансу
    |------------------------------------------------ ------------------------
    |
    | Тут ви можете вказати бажану кількість хвилин для сеансу
    | дозволено залишатися бездіяльним до закінчення терміну дії. Якщо ти хочеш їх
    | щоб термін дії закінчувався відразу після закриття браузера, установіть цей параметр.
    |
    */

    'lifetime' => env('SESSION_LIFETIME', 120),

    'expire_on_close' => false,

    /*
    |--------------------------------------------------------------------------
    | Шифрування сесії
    |------------------------------------------------ ------------------------
    |
    | Ця опція дозволяє легко вказати всі ваші дані сеансу
    | має бути зашифровано перед збереженням. Усе шифрування буде запущено
    | автоматично за допомогою Laravel, і ви можете використовувати сеанс як зазвичай.
    |
    */

    'encrypt' => false,

    /*
    |--------------------------------------------------------------------------
    | Розташування файлу сеансу
    |------------------------------------------------ ------------------------
    |
    | Під час використання рідного драйвера сеансу нам потрібне місце, де відбувається сеанс
    | можуть зберігатися файли. Для вас встановлено значення за умовчанням, але інше
    | місце розташування може бути вказано. Це потрібно лише для файлових сеансів.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Підключення до бази даних сеансу
    |------------------------------------------------ ------------------------
    |
    | Використовуючи драйвери сеансу «база даних» або «redis», ви можете вказати a
    | підключення, яке слід використовувати для керування цими сеансами. Це повинно
    | відповідають з’єднанню в параметрах конфігурації бази даних.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Таблиця бази даних сеансу
    |------------------------------------------------ ------------------------
    |
    | При використанні драйвера сесії "бази даних" ви можете вказати таблицю we
    | слід використовувати для керування сесіями. Звичайно, розумний дефолт є
    | надається вам; однак ви можете змінити це за потреби.
    |
    */

    'table' => 'sessions',

    /*
    |--------------------------------------------------------------------------
    | Сховище кешу сеансів
    |------------------------------------------------ ------------------------
    |
    | Використовуючи один із серверних модулів сеансу, керованих кеш-пам’яттю, ви можете
    | перерахувати сховище кешу, яке слід використовувати для цих сеансів. Це значення
    | має збігатися з одним із налаштованих «сховищ» кешу програми.
    |
    | Affects: "apc", "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Лотерея підмітання сесії
    |------------------------------------------------ ------------------------
    |
    | Деякі драйвери сеансу повинні вручну очищати своє місце зберігання, щоб отримати
    | позбавити старі сесії зі сховища. Ось шанси, що так і буде
    | відбуваються за заданим запитом. За замовчуванням шанси 2 зі 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Назва файлу cookie сеансу
    |------------------------------------------------ ------------------------
    |
    | Тут ви можете змінити назву файлу cookie, який використовується для ідентифікації сеансу
    | екземпляр за ідентифікатором. Назва, указана тут, використовуватиметься щоразу, коли a
    | новий сеанс cookie створюється фреймворком для кожного драйвера.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Шлях файлу cookie сеансу
    |------------------------------------------------ ------------------------
    |
    | Шлях файлу cookie сеансу визначає шлях, за яким файл cookie буде
    | вважатися наявними. Як правило, це буде кореневий шлях
    | вашу програму, але ви можете змінити це, коли це необхідно.
    |
    */

    'path' => '/',

    /*
    |--------------------------------------------------------------------------
    | Домен сеансового файлу cookie
    |------------------------------------------------ ------------------------
    |
    | Тут ви можете змінити домен файлу cookie, який використовується для ідентифікації сеансу
    | у вашій заявці. Це визначить, до яких доменів належить файл cookie
    | доступні у вашій програмі. Було встановлено розумне значення за замовчуванням.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | Файли cookie лише HTTPS
    |------------------------------------------------ ------------------------
    |
    | Якщо встановити для цього параметра значення true, файли cookie сеансу надсилатимуться лише назад
    | на сервер, якщо браузер має підключення HTTPS. Це збережеться
    | файли cookie не надсилаються вам, якщо це неможливо зробити безпечно.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | Лише доступ HTTP
    |------------------------------------------------ ------------------------
    |
    | Якщо встановити для цього значення значення true, JavaScript не зможе отримати доступ до
    | значення файлу cookie, і файл cookie буде доступний лише через
    | протокол HTTP. Ви можете змінити цей параметр, якщо потрібно.
    |
    */

    'http_only' => true,

    /*
    |--------------------------------------------------------------------------
    | Файли cookie того самого сайту
    |------------------------------------------------ ------------------------
    |
    | Цей параметр визначає, як ваші файли cookie поводяться під час міжсайтових запитів
    | відбуваються та можуть використовуватися для пом’якшення атак CSRF. За замовчуванням ми
    | встановить це значення як "lax", оскільки це безпечне значення за умовчанням.
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => 'lax',

];
